/****************************************************************************
 * Copyright (c) 2012-2018 by the DataTransferKit authors                   *
 * All rights reserved.                                                     *
 *                                                                          *
 * This file is part of the DataTransferKit library. DataTransferKit is     *
 * distributed under a BSD 3-clause license. For the licensing terms see    *
 * the LICENSE file in the top-level directory.                             *
 ****************************************************************************/

// WARNING: This file is automatically generated by CMake, and written
// to Trilinos' build (not source) directory.  DO NOT EDIT THIS FILE!
// If you run CMake again, it will overwrite any changes that you
// made.  Furthermore, it would be unwise to assume anything about
// this file: it may disappear at any time, and its name, location, or
// contents may change at any time.
//
// CMake takes each expression in the original .tmpl file enclosed by
// "at" symbols ("a" with a circle around it), and replaces it in the
// generated .cpp file with a string defined by Tpetra's CMake logic
// (see CMakeLists.txt in this directory).  Thus, the original .tmpl
// file is NOT syntactically correct C++, but the .cpp file generated
// by running CMake on it IS a syntactically correct C++ file.

#include "DataTransferKitDiscretization_config.h"

#if defined(HAVE_DATATRANSFERKIT_EXPLICIT_INSTANTIATION)

// We protect the contents of this file with macros, to assist
// applications that circumvent Trilinos' build system.  (We do NOT
// recommend this.)  That way, they can still build this file, but as
// long as the macros have correct definitions, they won't build
// anything that's not enabled.

#include "DTK_@CLASS_NAME@_decl.hpp"
#include "DTK_@CLASS_NAME@_def.hpp"
#include "DataTransferKitDiscretization_ETIHelperMacros.h"

namespace DataTransferKit {

  DTK_ETI_MANGLING_TYPEDEFS()

  DTK_@CLASS_MACRO_NAME@_INSTANT( @NT_MANGLED_NAME@ )

} // namespace DataTransferKit

#endif // Whether we should build this specialization
